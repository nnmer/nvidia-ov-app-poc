[package]
title = "KHI PCR Viewer & Viewport"

version = "1.0.0"

description = """This application shows you how to make an application that enables a viewport with RTX,
This is a base for Mostly Viewport Application or a starting point for you if you want to build something
quite different from the regular kit editor based applications
"""

# Keywords make it browsable in UI using the "experience" filter
keywords = ["app"]

[dependencies]
# Create Kit UI Based applications
"omni.kit.uiapp" = {}
"omni.kit.renderer.core" = {}

# This is your application setup Extension
# where you layout the various Windows, arrange your menu, etc.
# order = 1000 makes it run last
"msft.khi.viewer.setup" = { order = 1000 }

# This is an window for your application
# You can have many of them or none depending on what you are doing.
"msft.khi.viewer.window" = {}

# Useful Menus for File and Edit
# here you can decide to have them or not
"omni.kit.menu.file" = {}
"omni.kit.menu.edit" = {}

# Viewport Extensions
#############################################
# The omni.kit.viewport.bundle extension declares a number
# viewport extensions as depenencies so you only have
# to activate the bundle to get the rest. You can
# comment out the bundle and pick and choose individual
# viewport extensions.
"omni.kit.viewport.bundle" = {}

# The Main Viewport Window (brought in by omni.kit.viewport.bundle)
# "omni.kit.viewport.window" = {}


# Selection of Viewport Menu subMenus (brought in by omni.kit.viewport.bundle)
# "omni.kit.viewport.menubar.core" = {}
# "omni.kit.viewport.menubar.settings" = {}
# "omni.kit.viewport.menubar.display" = {}
# "omni.kit.viewport.menubar.render" = {}
# "omni.kit.viewport.menubar.camera" = {}

# Viewport Manipulator (brought in by omni.kit.viewport.bundle)
# "omni.kit.manipulator.prim" = {}
# "omni.kit.manipulator.transform" = {}
# "omni.kit.manipulator.camera" = {}
# "omni.kit.manipulator.viewport" = {}

# Additional Viewport features (legacy grid etc, HUD GPU stats)
# those display Grids and some HUD, same experiment with or without based on your neeed
"omni.kit.viewport.legacy_gizmos" = {}
"omni.hydra.engine.stats" = {}

# Enable RTX Renderer for your viewport
"omni.hydra.rtx" = {}
# here you could choose to enable omni.hydra.pxr to have Pixar Storm for example
# "omni.hydra.pxr" = {}
# or Iray
# "omni.hydra.iray" = {}

# if you want to expose the RTX render settings window
# but you can disable that and control it all in code if you don't want the user to see/change that
"omni.rtx.settings.core" = {}

# show when the RTX engine finished loading
"omni.kit.viewport.ready" = {}

# The toolbar
"omni.kit.window.toolbar" = {}

# Extensions window
"omni.kit.window.extensions" = {}

# Profiler
"omni.kit.profiler.window" = {}


[settings.app.window]
title = "KHI PCR Viewer & Viewports"

# Width and Height of your Main Window at startup
width = 1700
height = 900


# this is a custom setting used in our app setup to choose the Layout
[settings.app.layout]
name = "viewport"

[settings]
# Basic Kit App
################################
# this is used in our setup file to display the Version to the user in the title bar
app.titleVersion = "1.0.0"

# this will create a stage during the statup process
# you don't have to, but be aware the the RTX engine only starts
# when there is something to render, so use if false you might want or adjust the use of
# omni.kit.viewport.ready
app.content.emptyStageOnStart = true

# deprecate support for old kit.ui.menu
# (support legacy_mode will probably be removed for Kit 104)
app.menu.legacy_mode = false

# force new viewport name
exts."omni.kit.viewport.window".startup.windowName = "Viewport"

# here you can choose what renderers are enabled
renderer.enabled = "rtx"
# if you use other hydra delegate like Iray or pxr you can add them here like so
# renderer.enabled = "rtx,iray,pxr" # (that is what Omniverse Code does for example)

# By default rtx is setup to be mgpu but in some context you might want to run on
# a single gpu if so set this setting to false
renderer.multiGpu.enabled = true

# Skip long full shutdown and exit quickly
app.fastShutdown = true

# Fonts
# You can change the font files here and also adjust its size
# Although most ui have dynamic layout your mileage may vary.
# there might be a few issues with very low or very high font sizes
[settings.app.font]
file = "${fonts}/OpenSans-SemiBold.ttf"
size = 16

# Register extension folders from this repo in kit
# These are the paths where Kit looks for extensions
# Your application is using Extensions from your application
# Here they are setup into a single folder "exts" but you can have you own structure if you need
# see we also add the Extension from the Base application using their extscache
[settings.app.exts]
folders.'++' = ["${app}/../exts", "${app}/../extscache/", "${app}/../baseapp/exts", "${app}/../baseapp/extscache", "${app}/../baseapp/apps"]

# Extension registry is not yet enabled for public apps
[settings.app.extensions]
registryEnabled = false

# these will be for showing how to write tests for your application.
# And yes you absolutely should
[[test]]
args = [
	"--/app/window/width=480",
    "--/app/window/height=480",
    "--/app/extensions/registryEnabled=0", # Make sure we can run without registry and everything is precached
]
